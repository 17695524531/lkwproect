package com.szht.controller;

import com.alibaba.fastjson.JSONObject;
import com.szht.po.Zkalldata;
import com.szht.po.Zkyxzy;
import com.szht.po.Zkzylb;
import com.szht.service.HomePageService;
import net.sf.json.JSONArray;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.transform.Source;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

@Controller
public class HomePageController {
    @Resource(name = "homepageservice")
    private HomePageService homePageService;

    @RequestMapping(value = "/gocrgkpage", method = RequestMethod.GET)
    public String gocrgkpage(
            @RequestParam(value = "f") String f,
            HttpServletRequest request,
            HttpServletResponse response
    ) {
        String url = null;
        String path = request.getContextPath();
        String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() + path;
        if (f != null && "crgk".equals(f)) {
            url = basePath + "/img/crgk.jpg";
        } else if (f != null && "wljy".equals(f)) {
            url = basePath + "/img/wljy.jpg";
        } else if (f != null && "gjkfdx".equals(f)) {
            url = basePath + "/img/gjkfdx.jpg";
        } else if (f != null && "zk".equals(f)) {
            url = basePath + "/img/zk.jpg";
        }
        if (url != null) {
            request.setAttribute("imgUrl", url);
        }
        return "crgkpage";
    }

    @RequestMapping(value = "/gozygqz", method = RequestMethod.GET)
    public String gozygqz(
            HttpServletRequest request,
            HttpServletResponse response
    ) {
        return "zygqzpage";
    }

    @RequestMapping(value = "/getzkzydata", method = RequestMethod.GET)
    public String getzkzydata(
            Integer page,
            Integer limit,
            HttpServletResponse response,
            HttpServletRequest request
    ) {
        response.setContentType("text/html;charset=utf-8");
        response.setCharacterEncoding("UTF-8");
        List<Zkyxzy> yxzyresult = homePageService.getzkyxzydata(page, limit);
        List<Zkzylb> zylb = homePageService.getzkzylbdata();
        int count = homePageService.getzkyxzycount();
        List<Zkalldata> resultList = new ArrayList<>();
        HashMap<String, Object> resultmap = new HashMap<>();
        for (Zkzylb lb : zylb) {
            for (Zkyxzy zy : yxzyresult) {
                if (lb.getZylbdm().equals(zy.getZylb())) {
                    Zkalldata zkalldata = new Zkalldata();
                    zkalldata.setZylbmc(lb.getZylbmc());
                    zkalldata.setZymc(zy.getZymc());
                    zkalldata.setZyxs(zy.getZyxs());
                    resultList.add(zkalldata);
                }
            }
        }
        resultmap.put("code", 0);
        resultmap.put("mg", "");
        resultmap.put("count", count);
        JSONArray array = JSONArray.fromObject(resultList);
        resultmap.put("data", array);
        PrintWriter writer = null;
        try {
            writer = response.getWriter();
            writer.println(JSONObject.toJSONString(resultmap));
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            writer.flush();
            writer.close();
        }
        return null;
    }

    @RequestMapping(value = "/getzkyxzylb", method = RequestMethod.POST)
    public String getzkyxzylb(
            HttpServletRequest request,
            HttpServletResponse response
    ) {
        response.setContentType("text/html;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        List<Zkzylb> lbList = homePageService.getzkyxzylb();
        PrintWriter writer = null;
        try {
            writer = response.getWriter();
            if (lbList.size() > 0) {
                writer.println(JSONObject.toJSONString(lbList));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            writer.flush();
            writer.close();
        }
        return null;
    }

    @RequestMapping(value = "/savezkuserzyk", method = RequestMethod.POST)
    public String savezkuserzyk(
            @RequestParam("lb") String lb,
            @RequestParam("zymc") String zymc,
            @RequestParam("xs") String xs,
            HttpServletRequest request,
            HttpServletResponse response
    ) {
        System.out.println(lb+"-"+zymc+"-"+xs);
        return null;
    }
}
